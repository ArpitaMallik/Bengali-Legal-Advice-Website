import React, { useState } from 'react';
import { Send } from 'lucide-react';
import FileUpload from './FileUpload';

const UserMode: React.FC = () => {
  const [question, setQuestion] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [response, setResponse] = useState<string | null>(null);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!question.trim()) return;
    
    setIsLoading(true);
    
    // Simulate API response
    setTimeout(() => {
      setResponse(`Based on the information provided, it appears you are asking about ${question.substring(0, 50)}... 
      
      The legal advice in this situation would typically involve consulting with a qualified attorney who specializes in this area. Generally speaking, there are several factors to consider:
      
      1. Documentation and evidence are crucial in these matters
      2. Time limitations may apply to your situation
      3. There might be alternative dispute resolution methods available
      4. Consult with a licensed attorney in your jurisdiction for personalized advice
      
      Please note that this is general information and not specific legal advice for your situation.`);
      setIsLoading(false);
    }, 1500);
  };

  return (
    <div className="mt-6 bg-white rounded-lg shadow-sm p-6 transition-all">
      <h2 className="text-xl font-serif font-semibold text-gray-800">Ask for Legal Advice</h2>
      
      <form onSubmit={handleSubmit} className="mt-4">
        <div className="mb-4">
          <label htmlFor="question" className="block text-sm font-medium text-gray-700 mb-1">
            Your Legal Question
          </label>
          <textarea
            id="question"
            rows={4}
            className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors"
            placeholder="Describe your legal question or situation in detail..."
            value={question}
            onChange={(e) => setQuestion(e.target.value)}
          ></textarea>
        </div>
        
        <FileUpload label="Upload Related Documents (Optional)" />
        
        <div className="mt-6">
          <button
            type="submit"
            disabled={isLoading || !question.trim()}
            className={`inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white ${
              isLoading || !question.trim()
                ? "bg-indigo-300 cursor-not-allowed"
                : "bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
            } transition-colors`}
          >
            {isLoading ? (
              <>
                <svg className="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                Processing...
              </>
            ) : (
              <>
                <Send className="h-4 w-4 mr-2" />
                Submit Question
              </>
            )}
          </button>
        </div>
      </form>
      
      {response && (
        <div className="mt-8 p-5 bg-indigo-50 rounded-lg border border-indigo-100 animate-fadeIn">
          <h3 className="text-lg font-medium text-gray-900 font-serif">Legal Response</h3>
          <div className="mt-2 text-sm text-gray-700 whitespace-pre-line">
            {response}
          </div>
          <div className="mt-4 text-xs text-gray-500">
            <p>Note: This response is generated by AI based on the available legal documents and is not a substitute for professional legal advice.</p>
          </div>
        </div>
      )}
    </div>
  );
};

export default UserMode;